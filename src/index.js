import "@/styles/style.css"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å—Ç–∏–ª–µ–π)
import { clickSound } from '@/sounds/clickSound.mp3'
import { explosionSound } from '@/sounds/boom.mp3'
import { flagSound } from "@/sounds/flagSound.mp3";
import { winSound } from "@/sounds/winSound.mp3";

document.addEventListener('DOMContentLoaded', () => {
    //—Å–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤—ã–Ω—Ñ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const container = document.createElement('div');
    container.classList.add('container');

    const clickSound = new Audio('./sounds/clickSound.mp3');//–∑–≤—É–∫ –∫–ª–∏–∫–∞
    const explosionSound = new Audio('./sounds/boom.mp3');//–∑–≤—É–∫ –ø—Ä–æ–∏–≥—Ä—ã—à–∞
    const flagSound = new Audio("./sounds/flagSound.mp3")//–∑–≤—É–∫ —Ñ–ª–∞–∂–∫–∞
    const winSound = new Audio("./sounds/winSound.mp3")//–∑–≤—É–∫ –ø–æ–±–µ–¥—ã

    const timeElapsed = document.createElement('div');//–∏—Å—Ç–µ–∫—à–µ–µ –≤—Ä–µ–º—è
    timeElapsed.id = 'time-elapsed';
    timeElapsed.classList.add('time-elapsed');
    timeElapsed.textContent = 'Time: 0 seconds';

    const clickCount = document.createElement('div');//–∫–æ–ª”©–≤–æ –∫–ª–∏–∫–∞
    clickCount.id = 'click-count';
    clickCount.classList.add('click-count');
    clickCount.textContent = 'Clicks: 0';

    const title = document.createElement('h1');//–∑–∞–≥–æ–ª–æ–≤–æ–∫
    title.textContent = 'Minesweeper on JavaScript';
    container.appendChild(title);

    const board = document.createElement('div');//–∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
    board.classList.add('board');

    const flagsLeft = document.createElement('div');//–∫–æ–ª”©–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ñ–ª–∞–∂–∫–æ–≤
    flagsLeft.id = 'flags-left';
    flagsLeft.classList.add('flags-left');

    const result = document.createElement('div');
    result.id = 'result';
    result.classList.add('result');

    const restartGame = document.createElement('button');//–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã
    restartGame.id = 'restartGame';
    restartGame.classList.add('restartGame');
    restartGame.textContent = 'Restart Game';

    //–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥—Ä—ã
    let startTime;
    let elapsedTime = 0;
    let clickCounter = 0;
    let timerInterval;
    let width = 10;
    let bombAmount = 20;
    let flags = 0;
    let cells = [];//—Ç—É—Ç —Ö—Ä–∞–Ω–∏–º –≤—Å–µ –∫–ª–µ—Ç–∫–∏
    let isGameOver = false;

    function updateTime() {// —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
        const currentTime = new Date().getTime()// —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        elapsedTime = Math.floor((currentTime - startTime) / 1000)// –ó–∞—Ç–µ–º –æ–Ω–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ startTime
        timeElapsed.textContent = `Time: ${elapsedTime} seconds`//–∑–Ω–∞—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è
    }

    function createBoard() {
        startTime = new Date().getTime();
        flagsLeft.innerHTML = bombAmount;

        const bombsArray = Array(bombAmount).fill('bomb');//–∫–æ–ª-–≤–æ –æ–ø–∞—Å–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫
        const emptyArray = Array(width * width - bombAmount).fill('actual');//–∫–æ–ª-–≤–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫
        const gameArray = emptyArray.concat(bombsArray);//–æ–±—ä–µ–¥–µ–Ω—è–µ–º bombsArray empttyArray
        const shuffledArray = gameArray.sort(() => Math.random() - 0.5);//—Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–æ–º–± –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫

        for (let i = 0; i < width * width; i++) {
            const cell = document.createElement('div');//—Å–æ–∑–¥–∞—é –∫–ª–µ—Ç–∫—É
            cell.setAttribute('id', i);//—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞  —Å–æ–∑–¥–∞—é –Ω–æ–≤—É—é –∫–ª–µ—Ç–∫—É
            cell.classList.add(shuffledArray[i]);//–î–æ–±–∞–≤–ª—è–µ—Ç —ç—Ç–æ–π –∫–ª–µ—Ç–∫–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å, —á—Ç–æ–±—ã –º–æ–¥–Ω–æ –±—ã–ª–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–∞ –±–æ–º–±–æ–π –∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∫–ª–µ—Ç–∫–æ–π
            board.appendChild(cell);//–¥–æ–±–∞–≤–ª—è–µ—Ç –∫–ª–µ—Ç–∫—É –≤ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
            cells.push(cell);//–¥–æ–±–∞–≤–ª—è–µ—Ç —ç—Ç—É –∫–ª–µ—Ç–∫—É –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–ª–µ—Ç–æ–∫, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ª–µ–≥–∫–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º–∏ –≤ –±—É–¥—É—â–µ–º

            cell.addEventListener('click', function (e) {
                //–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∏–∫–∞–µ—Ç –ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è click, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç—Ç–æ—Ç –∫–ª–∏–∫
                click(cell);
            });

            cell.oncontextmenu = function (e) {
                //—ç—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –∫–ª–∏–∫–∞–º–∏ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏
                e.preventDefault();//–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –±—Ä–∞—É–∑–µ—Ä–∞
                addFlag(cell);//–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–ª–∞–∂–∫–∞
            };
        }
        //–∫–æ–¥ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ–º–±–∞—Ö
        for (let i = 0; i < cells.length; i++) {
            let total = 0;// –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–æ–º–± –≤–æ–∫—Ä—É–≥ —Ç–µ–∫—É—â–µ–π –∫–ª–µ—Ç–∫–∏
            let leftEdge = i % width === 0;//–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∞—è –∫–ª–µ—Ç–∫–∞ –Ω–∞ –ª–µ–≤–æ–º –∫—Ä–∞—é –∏–≥—Ä–∞–≤–æ–≥–æ –ø–æ–ª—è
            let rightEdge = i % width === width - 1;//—Ç—É—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –Ω–∞ –ø—Ä–∞–≤–æ–º

            if (cells[i].classList.contains('actual')) {
                if (i > 0 && !leftEdge && cells[i - 1].classList.contains('bomb')) total++;
                if (i > 9 && !rightEdge && cells[i + 1 - width].classList.contains('bomb')) total++;
                if (i > 10 && cells[i - width].classList.contains('bomb')) total++;
                if (i > 11 && !leftEdge && cells[i - 1 - width].classList.contains('bomb')) total++;
                if (i < 98 && !rightEdge && cells[i + 1].classList.contains('bomb')) total++;
                if (i < 90 && !leftEdge && cells[i - 1 + width].classList.contains('bomb')) total++;
                if (i < 88 && !rightEdge && cells[i + 1 + width].classList.contains('bomb')) total++;
                if (i < 89 && cells[i + width].classList.contains('bomb')) total++;
                cells[i].setAttribute('data', total);//–ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–ª–µ—Ç–∫—É –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å —Å–∫–æ–ª—å–∫–æ –±–æ–º–± —Ä—è–¥–æ–º
            }
        }
        timerInterval = setInterval(updateTime, 1000);
    }

    createBoard();

    //–µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –ø—Ä–∞–≤—É—é –∫–Ω–æ–ø–∫—É –º—ã—à–∏ —Ç–æ –¥–æ–±–∞–≤–∏—Ç —Ñ–ª–∞–≥
    function addFlag(cell) {
        flagSound.play()//–¥–ª—è –∑–≤—É–∫–∞
        if (isGameOver) return
        if (!cell.classList.contains('checked') && flags < bombAmount) {
            if (!cell.classList.contains('flag')) {
                cell.classList.add('flag')
                cell.innerHTML = ' üö©'
                flags++
                flagsLeft.innerHTML = bombAmount - flags;
                checkForWin();
            } else {
                cell.classList.remove('flag')
                cell.innerHTML = ''
                flags--
                flagsLeft.innerHTML = bombAmount - flags

            }
        }
    }
    function click(cell) {
        clickCounter++;//—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª-–≤–æ –∫–ª–∏–∫–æ–≤
        clickCount.textContent = `Clicks: ${clickCounter}`;//–æ–±–Ω–æ–≤–ª—è–µ—Ç
        clickSound.currentTime = 0;//–≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –Ω–æ–≤—ã–π –∑–≤—É–∫ —â–µ–ª—á–∫–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∫–ª–∏–∫–µ
        clickSound.play();//–≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∑–≤—É–∫
        let currentId = cell.id;//—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä
        if (isGameOver) return;
        if (cell.classList.contains('checked') || cell.classList.contains('flag')) return;
        if (cell.classList.contains('bomb')) {
            gameOver(cell);
        } else {
            let total = cell.getAttribute('data');
            if (total != 0) {//–æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ä—è–¥–æ–º —Å —Ç–µ–∫—É—â–µ–π –∫–ª–µ—Ç–∫–æ–π –µ—Å—Ç—å –±–æ–º–±—ã
                cell.classList.add('checked');
                if (total == 1) cell.classList.add('one');
                if (total == 2) cell.classList.add('two');
                if (total == 3) cell.classList.add('three');
                if (total == 4) cell.classList.add('four');
                cell.innerHTML = total;// –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–º–±
                return;// –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∫–ª–µ—Ç–∫–∞ –±—ã–ª–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∏ –µ–π –±—ã–ª –ø—Ä–∏—Å–≤–æ–µ–Ω  —Å—Ç–∏–ª—å
            }
            checkCell(cell, currentId);
        }
        cell.classList.add('checked');
    }
    function checkCell(cell, currentId) {
        const leftEdge = currentId % width === 0;
        const rightEdge = currentId % width === width - 1;

        setTimeout(() => {
            if (currentId > 0 && !leftEdge) {
                const newId = cells[parseInt(currentId) - 1].id;
                const newCell = document.getElementById(newId);
                click(newCell);
            }
            if (currentId > 9 && !rightEdge) {
                const newId = cells[parseInt(currentId) + 1 - width].id;
                const newCell = document.getElementById(newId);
                click(newCell);
            }
            if (currentId > 10) {
                const newId = cells[parseInt(currentId - width)].id;
                const newCell = document.getElementById(newId);
                click(newCell);
            }
            if (currentId > 11 && !leftEdge) {
                const newId = cells[parseInt(currentId) - 1 - width].id;
                const newCell = document.getElementById(newId);
                click(newCell);
            }
            if (currentId < 98 && !rightEdge) {
                const newId = cells[parseInt(currentId) + 1].id;
                const newCell = document.getElementById(newId);
                click(newCell);
            }
            if (currentId < 90 && !leftEdge) {
                const newId = cells[parseInt(currentId) - 1 + width].id;
                const newCell = document.getElementById(newId);
                click(newCell);
            }
            if (currentId < 88 && !rightEdge) {
                const newId = cells[parseInt(currentId) + 1 + width].id;
                const newCell = document.getElementById(newId);
                click(newCell);
            }
            if (currentId < 89) {
                const newId = cells[parseInt(currentId) + width].id;
                const newCell = document.getElementById(newId);
                click(newCell);
            }
        }, 10);
    }
    function gameOver() {
        explosionSound.play();//–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞
        isGameOver = true
        result.innerHTML = 'GAME OVER!!!'

        cells.forEach((cell) => {
            if (cell.classList.contains('bomb')) {
                cell.innerHTML = 'üí£';
                cell.classList.remove('bomb');
                cell.classList.add('checked');
            }
        })
    }
    function checkForWin() {
        winSound.play()//–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞
        let matches = 0
        for (let i = 0; i < matches.length; i++) {
            if (cells[i].classList.contains('flag') && cells[i].classList.contains('bomb')) {
                matches++;
            }
            if (matches === bombAmount) {
                result.innerHTML = 'YOU WIN!';
                isGameOver = true;
            }
        }
    }
    //–∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    restartGame.addEventListener('click', function () {
        isGameOver = false
        result.innerHTML = ''
        flags = []
        clickCounter = 0;
        clickCount.textContent = 'Clicks: 0';

        while (board.firstChild) {
            board.removeChild(board.firstChild);
        }
        createBoard();
    });


    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ body
    document.body.appendChild(container);
    container.appendChild(board);
    container.appendChild(flagsLeft);
    container.appendChild(result);
    container.appendChild(restartGame);
    container.appendChild(timeElapsed);
    container.appendChild(clickCount)
});

